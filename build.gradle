group 'co.tala.atlas.acceptance'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        kotlinVersion = '1.5.10'
        httpClientVersion = '1.9.307'
        kafkaAvroDomainVersion = '1.0.25'
        datastaxCassandraVersion = '3.7.1'
        awsJavaSdkVersion = '1.11.950'
        floRunnaVersion = '0.1.6'
        avroPluginVersion = '0.21.0'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:$avroPluginVersion"
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

//Apply common plugin / dependencies for all projects under main one
subprojects {
    version = '1.0'
    apply plugin: 'groovy'
    apply plugin: 'kotlin'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
        compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
        implementation 'org.codehaus.groovy:groovy:2.5.9'
        implementation 'com.google.code.gson:gson:2.8.7'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
        testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5', {
            exclude module: 'groovy-all'
        }

        testImplementation 'io.qameta.allure:allure-spock:2.13.8'
        implementation 'io.qameta.allure:allure-spock:2.13.8'

        testCompile('com.athaydes:spock-reports:1.7.1') {
            transitive = false // this avoids affecting your version of Groovy/Spock
        }
    }

    task CleanEnvironment(type: Test) {
        include '**/CleanEnvironmentSpec.*'
        systemProperty "environment", System.getProperty("environment")
        filter {
            setFailOnNoMatchingTests(false)
        }
    }

    test {
        exclude '**/CleanEnvironmentSpec.*'
        systemProperty "environment", System.getProperty("environment")
        systemProperty 'com.athaydes.spockframework.report.outputDir', "$buildDir/${System.getProperty("environment")}/spock-report"
        reports.junitXml.enabled = false
        reports.html.destination = file("$buildDir/${System.getProperty("environment")}/test-report")
        filter {
            setFailOnNoMatchingTests(false)
        }
    }

    test.dependsOn CleanEnvironment

        task ll(type: Test) {
            include '**/CleanEnvironmentSpec.*'
            systemProperty "environment", "local_mx"
            filter {
                setFailOnNoMatchingTests(false)
            }
        }

        task l(type: Test) {
            exclude '**/CleanEnvironmentSpec.*'
            systemProperty "environment", "local_mx"
        }

        l.dependsOn ll
}
